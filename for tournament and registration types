[1mdiff --git a/srcs/docker-compose.yml b/srcs/docker-compose.yml[m
[1mindex c4dba70e..88113940 100644[m
[1m--- a/srcs/docker-compose.yml[m
[1m+++ b/srcs/docker-compose.yml[m
[36m@@ -15,7 +15,9 @@[m [mservices:[m
     volumes:[m
       - ./requirements/traefik/config:/etc/traefik[m
       - ./requirements/traefik/config/ssl/:/ssl-certs[m
[31m-      - "${XDG_RUNTIME_DIR:-/var/run}/docker.sock:/var/run/docker.sock"[m
[32m+[m[32m      #- "${XDG_RUNTIME_DIR:-/var/run}/docker.sock:/var/run/docker.sock"[m
[32m+[m[32m      - /var/run/docker.sock:/var/run/docker.sock[m
[32m+[m
     networks:[m
       - transcendence[m
     restart: unless-stopped[m
[36m@@ -35,7 +37,8 @@[m [mservices:[m
       - PORTAINER_ADMIN_PASSWORD=${PORTAINER_ADMIN_PASSWORD}[m
     restart: unless-stopped[m
     volumes:[m
[31m-      - "${XDG_RUNTIME_DIR:-/var/run}/docker.sock:/var/run/docker.sock"[m
[32m+[m[32m      #- "${XDG_RUNTIME_DIR:-/var/run}/docker.sock:/var/run/docker.sock"[m
[32m+[m[32m      - /var/run/docker.sock:/var/run/docker.sock[m
       - portainer-data:/data[m
     networks:[m
       - transcendence[m
[1mdiff --git a/srcs/requirements/front-end/vanilla/css/ActionButton.css b/srcs/requirements/front-end/vanilla/css/ActionButton.css[m
[1mindex 8b7b56e7..ce7edd74 100644[m
[1m--- a/srcs/requirements/front-end/vanilla/css/ActionButton.css[m
[1m+++ b/srcs/requirements/front-end/vanilla/css/ActionButton.css[m
[36m@@ -6,7 +6,7 @@[m
     cursor: pointer; /* Cursor changes to pointer on hover */[m
     border: none; /* No border */[m
     display: inline-block; /* Allows setting margins */[m
[31m-    margin: 5px; /* Some space around the button */[m
[32m+[m[32m    margin: auto; /* Center the button */[m
     width: 200px;[m
 [m
     font-size: 1rem;[m
[1mdiff --git a/srcs/requirements/front-end/vanilla/css/style.css b/srcs/requirements/front-end/vanilla/css/style.css[m
[1mindex 73615402..99a3d6c6 100644[m
[1m--- a/srcs/requirements/front-end/vanilla/css/style.css[m
[1m+++ b/srcs/requirements/front-end/vanilla/css/style.css[m
[36m@@ -23,23 +23,30 @@[m [ma:hover {[m
 }[m
 [m
 body {[m
[31m-  margin: 0;[m
[31m-  /* display: flex; */[m
[31m-  place-items: center;[m
[32m+[m[32m  /* place-items: center; */[m
   /* min-width: 320px; */[m
   /* min-height: 100vh; */[m
 }[m
 [m
[32m+[m
 h1 {[m
   font-size: 3.2em;[m
   line-height: 1.1;[m
 }[m
 [m
 #app {[m
[31m-  /* max-width: 1280px;[m
[31m-  margin: 0 auto;[m
[31m-  padding: 2rem;[m
[31m-  text-align: center; */[m
[32m+[m[32m  display: flex;[m
[32m+[m[32m  flex-direction: column;[m
[32m+[m[32m  margin: auto;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.navigation {[m
[32m+[m[32m  margin: auto;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m#view {[m
[32m+[m[32m  width: 85%;[m
[32m+[m[32m  margin: auto;[m
 }[m
 [m
 .logo {[m
[1mdiff --git a/srcs/requirements/front-end/vanilla/css/tournament.css b/srcs/requirements/front-end/vanilla/css/tournament.css[m
[1mindex 17f483cf..eb5ed708 100644[m
[1m--- a/srcs/requirements/front-end/vanilla/css/tournament.css[m
[1m+++ b/srcs/requirements/front-end/vanilla/css/tournament.css[m
[36m@@ -1,14 +1,18 @@[m
 .tournament{[m
[31m-    display: grid;[m
[31m-    margin: 2rem;[m
[31m-    text-align: center;[m
[32m+[m[32m    display: flex;[m
[32m+[m[32m    flex-direction: column;[m
[32m+[m[32m    margin: auto;[m
[32m+[m[41m    [m
 }[m
 [m
 .help{[m
     display:flex;[m
[31m-    [m
[32m+[m[32m    justify-content: flex-end;[m
[32m+[m
 }[m
[31m-action-button{[m
[31m-    margin-top: 4rem;[m
[31m-    margin-bottom: 5rem;[m
[32m+[m
[32m+[m[32m.action-button{[m
[32m+[m[32m    margin: auto;[m
[32m+[m[32m    margin-top: 5rem;[m
[32m+[m[32m    margin-bottom: 2rem;[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/srcs/requirements/front-end/vanilla/js/main.js b/srcs/requirements/front-end/vanilla/js/main.js[m
[1mindex 5e1ea3b7..7033bfa9 100644[m
[1m--- a/srcs/requirements/front-end/vanilla/js/main.js[m
[1m+++ b/srcs/requirements/front-end/vanilla/js/main.js[m
[36m@@ -6,5 +6,5 @@[m [mimport router from '@utils/Router.js'; // Auto initializes the router[m
 [m
 document.addEventListener('DOMContentLoaded', () => {[m
   setupNavigation(); // Setup navigation links[m
[31m-  //router(); // Initialize the router[m
[32m+[m
 });[m
[1mdiff --git a/srcs/requirements/front-end/vanilla/js/utils/Navigation.js b/srcs/requirements/front-end/vanilla/js/utils/Navigation.js[m
[1mindex b3803819..4e803bb1 100644[m
[1m--- a/srcs/requirements/front-end/vanilla/js/utils/Navigation.js[m
[1m+++ b/srcs/requirements/front-end/vanilla/js/utils/Navigation.js[m
[36m@@ -7,8 +7,15 @@[m [mexport const setupNavigation = () => {[m
     navContainer.classList.add('navigation'); // Add a class for styling if necessary[m
     parentElement.insertBefore(navContainer, parentElement.firstChild);[m
 [m
[32m+[m[32m    const nav = [[m
[32m+[m[32m        "/",[m
[32m+[m	[32m    "/tournament",[m
[32m+[m	[32m    "/options"[m
[32m+[m[32m    ];[m
[32m+[m[32m    //Loop thorugh the nav array and create the links that correspond to the routes[m
[32m+[m[32m    //if path is included in nav[m
     Object.entries(routes).forEach(([path, { buttonText }]) => {[m
[31m-        if (path !== '/404') { // Exclude the 404 route[m
[32m+[m[32m        if (nav.includes(path)) {[m
             const link = document.createElement('a');[m
             link.href = path;[m
             link.textContent = buttonText;[m
[36m@@ -20,4 +27,7 @@[m [mexport const setupNavigation = () => {[m
             navContainer.appendChild(link); // Append the link to the navigation container[m
         }[m
     });[m
[32m+[m
[32m+[m[41m    [m
[32m+[m
 };[m
[1mdiff --git a/srcs/requirements/front-end/vanilla/js/utils/Router.js b/srcs/requirements/front-end/vanilla/js/utils/Router.js[m
[1mindex d23dd756..79ee0170 100644[m
[1m--- a/srcs/requirements/front-end/vanilla/js/utils/Router.js[m
[1m+++ b/srcs/requirements/front-end/vanilla/js/utils/Router.js[m
[36m@@ -5,6 +5,7 @@[m [mimport Options from '@views/Options.js';[m
 import Game from '@views/Game.js';[m
 import Login from '@views/Login.js';[m
 import NotFound from '@views/NotFound.js';[m
[32m+[m[32mimport CreateTournament from '@views/CreateTournament.js';[m
 [m
 [m
 export const routes = {[m
[36m@@ -32,6 +33,12 @@[m [mexport const routes = {[m
 		title: 'Tournament',[m
 		buttonText: 'Tournament'[m
 	},[m
[32m+[m	[32m'/create-tournament': {[m
[32m+[m		[32mpath: '/create-tournament',[m
[32m+[m		[32mview: CreateTournament,[m
[32m+[m		[32mtitle: 'Tournament Creation',[m
[32m+[m		[32mbuttonText: 'Create Tournament'[m
[32m+[m	[32m},[m
 	'/options': {[m
 		path: '/options',[m
 		view: Options,[m
[1mdiff --git a/srcs/requirements/front-end/vanilla/js/views/Game_Map.js b/srcs/requirements/front-end/vanilla/js/views/Game_Map.js[m
[1mdeleted file mode 100644[m
[1mindex 57195f9b..00000000[m
[1m--- a/srcs/requirements/front-end/vanilla/js/views/Game_Map.js[m
[1m+++ /dev/null[m
[36m@@ -1,343 +0,0 @@[m
[31m-import AbstractView from "./AbstractView";[m
[31m-import * as THREE from 'three';[m
[31m-import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';[m
[31m-import io from 'socket.io-client';[m
[31m-import { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';[m
[31m-import { Texture } from 'three';[m
[31m-[m
[31m-class SpObject {[m
[31m-    constructor(objMesh, dirMesh) {[m
[31m-        this.mesh = objMesh;[m
[31m-        this.dirMesh = dirMesh;[m
[31m-	}[m
[31m-}[m
[31m-[m
[31m-class BoxObject {[m
[31m-    constructor(objMesh, dir1Mesh, dir2Mesh) {[m
[31m-        this.mesh = objMesh;[m
[31m-        this.dir1Mesh = dir1Mesh;[m
[31m-        this.dir2Mesh = dir2Mesh;[m
[31m-    }[m
[31m-}[m
[31m-[m
[31m-export default class Game extends AbstractView {[m
[31m-	constructor(element) {[m
[31m-		super(element);[m
[31m-		this.loader = new GLTFLoader();[m
[31m-		[m
[31m-        // controls[m
[31m-        this.controls = null;[m
[31m-        [m
[31m-        // rendering[m
[31m-        this.renderer = null;[m
[31m-        this.scene = null;[m
[31m-        this.camera = null;[m
[31m-[m
[31m-        this.playerID = null;[m
[31m-		this.matchID = null;[m
[31m-[m
[31m-        // objects[m
[31m-        this.ball = null;[m
[31m-		this.banana = null;[m
[31m-        this.paddles = [];[m
[31m-        this.walls = [];[m
[31m-[m
[31m-        // lights[m
[31m-        this.ambientLight = null;[m
[31m-        this.directionalLight = null;[m
[31m-	};[m
[31m-[m
[31m-	async getHtml() {[m
[31m-		return `[m
[31m-			<div id="gameContainer"></div>[m
[31m-		`;[m
[31m-	};[m
[31m-[m
[31m-	async init() {[m
[31m-		console.log("init Game View...");[m
[31m-		// Set up the game container[m
[31m-		this.container = document.getElementById('gameContainer');[m
[31m-		[m
[31m-		// Your game setup logic here (init socket, create scene, etc.)[m
[31m-		// this.generateScene();[m
[31m-[m
[31m-		// Initialize socket connection[m
[31m-		this.initSocket();[m
[31m-[m
[31m-		// Add event listeners (resize, key events, etc.)[m
[31m-		window.addEventListener('resize', this.onWindowResize.bind(this), false);[m
[31m-		window.addEventListener("keydown", this.handleKeyPress.bind(this));[m
[31m-		window.addEventListener("keyup", this.handleKeyRelease.bind(this));[m
[31m-	};[m
[31m-[m
[31m-	onWindowResize() {[m
[31m-		this.camera.aspect = window.innerWidth / window.innerHeight;[m
[31m-		this.camera.updateProjectionMatrix();[m
[31m-		this.renderer.setSize(window.innerWidth, window.innerHeight);[m
[31m-	};[m
[31m-[m
[31m-	handleKeyPress(event) {[m
[31m-		console.log(event.key);[m
[31m-		if (event.key == "w")[m
[31m-			this.socket.emit('moveUp');[m
[31m-		if (event.key == "s")[m
[31m-			this.socket.emit('moveDown');[m
[31m-		if (event.key == "d")[m
[31m-			this.socket.emit('dash');[m
[31m-	};[m
[31m-[m
[31m-	handleKeyRelease(event) {[m
[31m-		if (event.key == "w" || event.key == "s")[m
[31m-			this.socket.emit('stop');[m
[31m-	};[m
[31m-[m
[31m-	initSocket() {[m
[31m-		// socket initialization and event handling logic[m
[31m-		const hostname = window.location.hostname;[m
[31m-		const protocol = 'wss';[m
[31m-		const query = window.location.search;[m
[31m-		const io_url = hostname.includes("github.dev") ? `${protocol}://${hostname}` : `${protocol}://${hostname}:9443${query}`;[m
[31m-		console.log(`Connecting to ${io_url}`)[m
[31m-		this.socket = io(`${io_url}`, {[m
[31m-			path: '/game-logic/socket.io',[m
[31m-			secure: hostname !== 'localhost',[m
[31m-			rejectUnauthorized: false,[m
[31m-			transports: ['websocket'][m
[31m-		});[m
[31m-[m
[31m-		this.socket.on('error', (error) => {[m
[31m-			console.error("Socket error: ", error);[m
[31m-		});[m
[31m-[m
[31m-		this.socket.on('connect_error', (error) => {[m
[31m-			console.error("Socket connection error: ", error);[m
[31m-		});[m
[31m-[m
[31m-		this.socket.on('whoareyou', () => {[m
[31m-			this.socket.emit('ID', this.playerID, this.matchID);[m
[31m-		});[m
[31m-[m
[31m-		this.socket.on('generate', data => {[m
[31m-			// Generate scene and update it[m
[31m-			console.log("DATA: ", data);[m
[31m-			this.generateScene(data, this.socket);[m
[31m-			this.updateScene(data, this.socket);[m
[31m-			this.renderer.render(this.scene, this.camera);[m
[31m-		});[m
[31m-[m
[31m-		this.socket.on('render', data => {[m
[31m-			console.log("Rendering Frame...");[m
[31m-			// this.updateScene(JSON.parse(data));[m
[31m-			this.updateScene(data);[m
[31m-			this.renderer.render(this.scene, this.camera);[m
[31m-		});[m
[31m-	};[m
[31m-[m
[31m-	destroy() {[m
[31m-		if (this.socket) {[m
[31m-			this.socket.disconnect();[m
[31m-		}[m
[31m-		[m
[31m-		console.log("Destroying Game View...");[m
[31m-		// Cleanup logic here (remove event listeners, etc.)[m
[31m-		window.removeEventListener('resize', this.onWindowResize.bind(this));[m
[31m-		window.removeEventListener("keydown", this.handleKeyPress.bind(this));[m
[31m-		window.removeEventListener("keyup", this.handleKeyRelease.bind(this));[m
[31m-[m
[31m-		// Additional cleanup (disposing Three.js objects, etc.)[m
[31m-	};[m
[31m-[m
[31m-	generateScene(data, socket) {[m
[31m-		console.log("Generating Scene...");[m
[31m-[m
[31m-		this.scene = new THREE.Scene();[m
[31m-		this.camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);[m
[31m-		this.renderer = new THREE.WebGLRenderer();[m
[31m-		// this.controls = new OrbitControls(this.camera, this.renderer.domElement);[m
[31m-		// this.controls.target.set(0, 0, 0);[m
[31m-		[m
[31m-		this.camera.position.set(data.camera.pos.x, data.camera.pos.y, data.camera.pos.z);[m
[31m-		this.camera.lookAt(new THREE.Vector3(data.camera.target.x, data.camera.target.y, data.camera.target.z));[m
[31m-		let i = 0;[m
[31m-		console.log("PLAYERS: ", data.players);[m
[31m-		for (let player of data.players) {[m
[31m-			if (player.socketID == socket.id) {[m
[31m-				console.log(`socket : ${player.socketID}, client : ${socket.id}, ${i}, angle = ${player.paddle.angle}`);[m
[31m-				this.camera.rotation.set(0, 0, 2 * Math.PI/data.gamemode.nbrOfPlayers * i);[m
[31m-			}[m
[31m-			i++;[m
[31m-		}[m
[31m-		// this.camera.rotation.set(0, 0, 90);[m
[31m-		// for later : set cam rotation depending on which client this is so the player is always at the same place;[m
[31m-		[m
[31m-		this.renderer.setSize(window.innerWidth, window.innerHeight);[m
[31m-		this.container.appendChild(this.renderer.domElement);[m
[31m-		[m
[31m-[m
[31m-		// generate objects[m
[31m-		this.generateBall(data);[m
[31m-		this.generatePaddles(data);[m
[31m-		this.generateWalls(data);[m
[31m-		// this.generateField(data);[m
[31m-		this.generateLights(data);[m
[31m-		// this.generateSkyBox(data);[m
[31m-		this.drawAxes();[m
[31m-[m
[31m-		this.generateBanana(data);[m
[31m-[m
[31m-		// render scene[m
[31m-		this.renderer.render(this.scene, this.camera);[m
[31m-	};[m
[31m-[m
[31m-	// Other methods (generateScene, updateScene, etc.) here[m
[31m-	updateScene(data, socket) {[m
[31m-		console.log("Updating Scene...");[m
[31m-		this.ball.mesh.position.set(data.ball.pos.x, data.ball.pos.y, 0);[m
[31m-		// this.ball.dirMesh.position.set(data.ball.pos.x, data.ball.pos.y, 0);[m
[31m-		let i = 0;[m
[31m-		for (let player of data.players) {[m
[31m-			this.paddles[i].mesh.position.set(player.paddle.pos.x, player.paddle.pos.y, player.paddle.pos.z);[m
[31m-			this.paddles[i].mesh.material.opacity = player.connected ? 0.7 : 0.3;[m
[31m-			// this.paddles[i].dir1Mesh.position.set(player.paddle.pos.x, player.paddle.pos.y, player.paddle.pos.z);[m
[31m-			// this.paddles[i].dir2Mesh.position.set(player.paddle.pos.x, player.paddle.pos.y, player.paddle.pos.z);[m
[31m-			// for (let i=0; i<data.gamemode.nbrOfPlayers; i++) {[m
[31m-			// 	if (player.socketID = socket.id) {[m
[31m-			// 		this.camera.rotation.set(0, 0, player.paddle.angle + Math.PI / 2);[m
[31m-			// 	}[m
[31m-			// }[m
[31m-			i++;[m
[31m-		}[m
[31m-	}[m
[31m-[m
[31m-	drawAxes() {[m
[31m-		// axes length[m
[31m-		const axisLength = 10;[m
[31m-		const center = new THREE.Vector3(0, 0, 0);[m
[31m-		// X, Y & Z in Red, Green & Blue[m
[31m-		const arrowX = new THREE.ArrowHelper(new THREE.Vector3(1, 0, 0), center, axisLength, 0xff0000);[m
[31m-		const arrowZ = new THREE.ArrowHelper(new THREE.Vector3(0, 1, 0), center, axisLength, 0x00ff00);[m
[31m-		const arrowY = new THREE.ArrowHelper(new THREE.Vector3(0, 0, 1), center, axisLength, 0x0000ff);[m
[31m-		[m
[31m-		//add to scene[m
[31m-		this.scene.add(arrowX);[m
[31m-		this.scene.add(arrowZ);[m
[31m-		this.scene.add(arrowY);[m
[31m-	};[m
[31m-[m
[31m-	generateBanana(data) {[m
[31m-		this.loader.load([m
[31m-			// resource URL[m
[31m-			'../assets/banana/scene.gltf',[m
[31m-			// called when the resource is loaded[m
[31m-			function ( gltf ) {[m
[31m-		[m
[31m-				this.banana = gltf.scene;[m
[31m-				this.banana.scale.set(5, 5, 5);[m
[31m-		[m
[31m-				this.scene.add(this.banana);[m
[31m-		[m
[31m-			},[m
[31m-			// called while loading is progressing[m
[31m-			function ( xhr ) {[m
[31m-		[m
[31m-				console.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );[m
[31m-		[m
[31m-			},[m
[31m-			// called when loading has errors[m
[31m-			function ( error ) {[m
[31m-		[m
[31m-				console.log( 'An error happened while loading model' );[m
[31m-		[m
[31m-			}[m
[31m-		);[m
[31m-	}[m
[31m-[m
[31m-	generateBall(data) {[m
[31m-		const ballGeometry = new THREE.SphereGeometry(data.ball.r, 24, 12);[m
[31m-		const ballMaterial = new THREE.MeshPhongMaterial({ color: data.ball.col, transparent: false, opacity: 0.7 });[m
[31m-		const dir1 = new THREE.ArrowHelper([m
[31m-			new THREE.Vector3(data.ball.dir.x,[m
[31m-							data.ball.dir.y,[m
[31m-							data.ball.dir.z,),[m
[31m-				data.ball.pos, 10, 0xff0000);[m
[31m-[m
[31m-        this.ball = new SpObject(new THREE.Mesh(ballGeometry, ballMaterial), dir1);[m
[31m-		[m
[31m-		// add to scene[m
[31m-		this.scene.add(this.ball.mesh);[m
[31m-		// this.scene.add(this.ball.dirMesh);[m
[31m-[m
[31m-		this.ball.mesh.position.set(data.ball.pos.x, data.ball.pos.y, data.ball.pos.z);[m
[31m-	}[m
[31m-[m
[31m-	generateWalls(data) {[m
[31m-		const wallGeometry = new THREE.BoxGeometry(data.field.wallsSize, 2, 1);[m
[31m-		const wallMaterial = new THREE.MeshPhongMaterial({ color: data.ball.col, transparent: true, opacity: 1, reflectivity: 0.5 });[m
[31m-[m
[31m-		for (let i=0; i<data.gamemode.nbrOfPlayers; i++) {[m
[31m-			this.walls[i] = new THREE.Mesh(wallGeometry, wallMaterial); // create Material[m
[31m-			this.scene.add(this.walls[i]); // add mesh to the scene[m
[31m-			this.walls[i].position.set(data.field.walls[i].pos.x, data.field.walls[i].pos.y, 0); // set the position[m
[31m-			this.walls[i].rotation.set(0, 0, data.field.walls[i].angle + Math.PI / 2); // set the rotation to the proper orientation (facing center)[m
[31m-		}[m
[31m-	}[m
[31m-[m
[31m-	generatePaddles(data) {[m
[31m-		for (let player of data.players) {[m
[31m-			console.log("player color : ", player.color);[m
[31m-			const paddleGeometry = new THREE.BoxGeometry(player.paddle.h, 1, 2);[m
[31m-			const paddleMaterial = new THREE.MeshPhongMaterial({ color: player.color, transparent: true, opacity: 0.7, reflectivity: 0.5 });[m
[31m-[m
[31m-			const dir1 = new THREE.ArrowHelper([m
[31m-				new THREE.Vector3(player.paddle.dirToCenter.x,[m
[31m-								player.paddle.dirToCenter.y,[m
[31m-								player.paddle.dirToCenter.z,),[m
[31m-					player.paddle.pos, 10, 0xff0000);[m
[31m-			const dir2 = new THREE.ArrowHelper([m
[31m-				new THREE.Vector3(player.paddle.dirToTop.x,[m
[31m-								player.paddle.dirToTop.y,[m
[31m-								player.paddle.dirToTop.z,),[m
[31m-					player.paddle.pos, 10, 0x00ff00);[m
[31m-[m
[31m-            this.paddles[i] = new BoxObject(new THREE.Mesh(paddleGeometry, paddleMaterial), dir1, dir2);[m
[31m-			this.scene.add(this.paddles[i].mesh); // add mesh to the scene[m
[31m-			// this.scene.add(this.paddles[i].dir1Mesh);[m
[31m-			// this.scene.add(this.paddles[i].dir2Mesh);[m
[31m-[m
[31m-			this.paddles[i].mesh.position.set(player.paddle.pos.x, player.paddle.pos.y, 0); // set the position[m
[31m-			this.paddles[i].mesh.rotation.set(0, 0, player.paddle.angle + Math.PI / 2); // set the rotation to the proper orientation (facing center)[m
[31m-		}[m
[31m-	}[m
[31m-[m
[31m-	generateLights(){[m
[31m-		this.directionalLight = new THREE.DirectionalLight(0xffffff, 1);[m
[31m-		this.directionalLight.position.set(0, 1, 1);[m
[31m-[m
[31m-		this.ambientLight = new THREE.AmbientLight(0xffffff, 0.8);[m
[31m-[m
[31m-		// add to scene[m
[31m-		this.scene.add(this.directionalLight);[m
[31m-		this.scene.add(this.ambientLight);[m
[31m-	}[m
[31m-[m
[31m-	// generateSkyBox(data) {[m
[31m-	// 	// Charger la texture de ciel étoilé[m
[31m-	// 	const starTexture = new THREE.TextureLoader().load('../../assets/banana.jpg'); // Remplacez par le chemin de votre texture[m
[31m-	// 	// Créer la géométrie de la sphère[m
[31m-	// 	starTexture.colorSpace = THREE.SRGBColorSpace;[m
[31m-	// 	const starGeometry = new THREE.SphereGeometry(300, 64, 64); // Rayon, segmentsWidth, segmentsHeight[m
[31m-	// 	// starTexture.offset.set(0.5, 0); // Shifts the texture halfway across its width[m
[31m-[m
[31m-	// 	// Créer le matériau avec la texture[m
[31m-	// 	const starMaterial = new THREE.MeshBasicMaterial({[m
[31m-    // 		map: starTexture,[m
[31m-    // 		side: THREE.BackSide[m
[31m-	// 	});[m
[31m-[m
[31m-	// 	// Créer le mesh de la sphère[m
[31m-	// 	const starSphere = new THREE.Mesh(starGeometry, starMaterial);[m
[31m-[m
[31m-	// 	// Ajouter la sphère étoilée à la scène[m
[31m-	// 	this.scene.add(starSphere);[m
[31m-	// };[m
[31m-}[m
[1mdiff --git a/srcs/requirements/front-end/vanilla/js/views/Tournament.js b/srcs/requirements/front-end/vanilla/js/views/Tournament.js[m
[1mindex 97232f43..0db54822 100644[m
[1m--- a/srcs/requirements/front-end/vanilla/js/views/Tournament.js[m
[1m+++ b/srcs/requirements/front-end/vanilla/js/views/Tournament.js[m
[36m@@ -12,6 +12,7 @@[m [mexport default class Tournament extends AbstractView {[m
 		super();[m
 [m
 		this.createMatch = this.createMatch.bind(this);[m
[32m+[m		[32mthis.createTournament = this.createTournament.bind(this);[m
 		this.caption = 'Active Tournaments';[m
 		[m
 		this.headers = ['Tournament Name', 'Host', 'Number of Players', 'Time Remaining', 'Tournament Type', 'Registration Mode', 'Action'];[m
[36m@@ -80,10 +81,9 @@[m [mexport default class Tournament extends AbstractView {[m
 	}[m
 [m
 	async getHtml() {[m
[31m-		//await new Promise(resolve => setTimeout(resolve, 100)); // Wait for 3 seconds[m
 		return `[m
 			<div class="tournament">[m
[31m-				<div>    [m
[32m+[m				[32m<div class="action-button">[m[41m    [m
 					<action-button [m
             		    data-text=" ⚡ Play Now"[m
 						id="createMatchButton"[m
[36m@@ -116,6 +116,10 @@[m [mexport default class Tournament extends AbstractView {[m
 [m
 		const createMatchButton = document.getElementById('createMatchButton');[m
 		createMatchButton.addEventListener('click', this.createMatch);[m
[32m+[m
[32m+[m		[32mconst createTournamentButton = document.getElementById('createTournamentButton');[m
[32m+[m		[32mcreateTournamentButton.addEventListener('click', this.createTournament);[m
[32m+[m[41m		[m
 	}[m
 [m
 	async getTournamentList() {[m
[36m@@ -143,6 +147,11 @@[m [mexport default class Tournament extends AbstractView {[m
 		}[m
 	}[m
 [m
[32m+[m	[32masync createTournament() {[m
[32m+[m		[32mnavigateTo('/create-tournament');[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m
 	getGameSettings() {[m
 		return {[m
 			"gamemodeData": {[m
[36m@@ -166,7 +175,7 @@[m [mexport default class Tournament extends AbstractView {[m
 			},[m
 			"playersData": [[m
 			  {[m
[31m-				"accountID": "tata",[m
[32m+[m				[32m"accountID": "motero",[m
 				"color": "0x0000ff"[m
 			  },[m
 			  {[m
[1mdiff --git a/srcs/requirements/tournament_service/app/entrypoint.sh b/srcs/requirements/tournament_service/app/entrypoint.sh[m
[1mindex 8cb51508..1df3f51f 100644[m
[1m--- a/srcs/requirements/tournament_service/app/entrypoint.sh[m
[1m+++ b/srcs/requirements/tournament_service/app/entrypoint.sh[m
[36m@@ -6,8 +6,9 @@[m [mdone[m
 [m
 # Apply database migrations[m
 python manage.py flush --no-input[m
[32m+[m[32mpython manage.py migrate --fake sessions zero[m
 python manage.py makemigrations[m
[31m-python manage.py migrate[m
[32m+[m[32mpython manage.py migrate --fake-initial[m
 [m
 # Start your Django app[m
 python manage.py runserver 0.0.0.0:8001[m
[1mdiff --git a/srcs/requirements/tournament_service/app/manage_tournament/migrations/0008_auto_20240224_1407.py b/srcs/requirements/tournament_service/app/manage_tournament/migrations/0008_auto_20240224_1407.py[m
[1mdeleted file mode 100644[m
[1mindex 029f458c..00000000[m
[1m--- a/srcs/requirements/tournament_service/app/manage_tournament/migrations/0008_auto_20240224_1407.py[m
[1m+++ /dev/null[m
[36m@@ -1,19 +0,0 @@[m
[31m-# Generated by Django 3.1.3 on 2024-02-24 14:07[m
[31m-[m
[31m-from django.db import migrations, models[m
[31m-import django.db.models.deletion[m
[31m-[m
[31m-[m
[31m-class Migration(migrations.Migration):[m
[31m-[m
[31m-    dependencies = [[m
[31m-        ('manage_tournament', '0007_auto_20240220_1657'),[m
[31m-    ][m
[31m-[m
[31m-    operations = [[m
[31m-        migrations.AlterField([m
[31m-            model_name='tournament',[m
[31m-            name='setting',[m
[31m-            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='manage_tournament.matchsetting'),[m
[31m-        ),[m
[31m-    ][m
[1mdiff --git a/srcs/requirements/tournament_service/app/manage_tournament/urls.py b/srcs/requirements/tournament_service/app/manage_tournament/urls.py[m
[1mindex 3ccdcdb7..297e25c4 100644[m
[1m--- a/srcs/requirements/tournament_service/app/manage_tournament/urls.py[m
[1m+++ b/srcs/requirements/tournament_service/app/manage_tournament/urls.py[m
[36m@@ -47,6 +47,12 @@[m [murlpatterns = [[m
     # POST /tournaments/{id}/end - End the tournament, finalizing its state and possibly triggering the calculation of rankings.[m
     path('matches/<int:match_id>/end/', views.MatchEnd.as_view(), name='match-end'),[m
 [m
[32m+[m[32m# All tournament types[m
[32m+[m[32m    # Get aLL TOURNAMENT types[m
[32m+[m[32m    path('tournament-types/', views.TournamentTypeList.as_view(), name='tournament-type-list'),[m
[32m+[m[32m# All registration types[m
[32m+[m[32m    # Get aLL registration types[m
[32m+[m[32m    path('registration-types/', views.RegistrationTypeList.as_view(), name='resgistration-type-list'),[m
     [m
     # path('<int:tournament_id>/matches/', views.TournamentMatchList.as_view(), name='tournament-match-list'),[m
     # path('<int:tournament_id>/match-settings/', views.MatchSettingList.as_view(), name='match-setting-list'),[m
[1mdiff --git a/srcs/requirements/tournament_service/scripts/entrypoint.sh b/srcs/requirements/tournament_service/scripts/entrypoint.sh[m
[1mindex 74dd1620..39eb222f 100644[m
[1m--- a/srcs/requirements/tournament_service/scripts/entrypoint.sh[m
[1m+++ b/srcs/requirements/tournament_service/scripts/entrypoint.sh[m
[36m@@ -6,8 +6,10 @@[m [mdone[m
 [m
 # Apply database migrations[m
 python manage.py flush --no-input[m
[32m+[m[32mpython manage.py migrate --fake sessions zero[m
 python manage.py makemigrations[m
[31m-python manage.py migrate --run-syncdb[m
[32m+[m[32mpython manage.py migrate --fake-initial[m
[32m+[m
 [m
 # Start your Django app[m
 python manage.py runserver 0.0.0.0:8001[m
