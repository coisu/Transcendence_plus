# docker-compose.yml
version: '3.8'
services:

  portainer:
    image: portainer
    container_name: portainer
    build:
      context: ./requirements/portainer
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
   #   - "8000:8000"
      - "9443:9443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      #- "${XDG_RUNTIME_DIR}/docker.sock:/var/run/docker.sock"
      - portainer-data:/data
    labels:
    #FRONTEND
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`portainer.localhost`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.services.frontend.loadbalancer.server.port=9443"
      - "traefik.http.routers.frontend.service=frontend"
      
    #Edge  
      - "traefik.http.routers.edge.rule=Host(`portainer_edge.localhost`)"
      - "traefik.http.routers.edge.entrypoints=web"
      - "traefik.http.services.edge.loadbalancer.server.port=8000"
      - "traefik.http.routers.edge.service=edge"
    networks:
      - transcendence

  traefik:
    image: traefik:v2.10.4
    container_name: traefik
    ports:
      - 80:80
      - 443:443
      # -- (Optional) Enable Dashboard, don't do in production
      - 8080:8080
    volumes:
      - ./config:/etc/traefik
      - traefik-ssl-certs:/ssl-certs
      #- "${XDG_RUNTIME_DIR}/docker.sock:/var/run/docker.sock"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - transcendence
    restart: unless-stopped
    depends_on:
      - portainer
    #labels:
      #- "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      #- "traefik.http.routers.http-catchall.entrypoints=web"
      #- "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      #- "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

volumes:
  traefik-ssl-certs:
    driver: local
  portainer-data:
    driver: local

networks:
  transcendence:
    name: transcendence
    driver: bridge
