# docker-compose.yml
version: '3.8'

services:
  traefik:
    build:
      context: ./requirements/traefik
      dockerfile: Dockerfile
    container_name: traefik
    ports:
      - 9080:80
      - 9443:443
      # -- (Optional) Enable Dashboard, don't do in production
      - 8080:8080
    volumes:
      - ./requirements/traefik/config:/etc/traefik
      - ./requirements/traefik/config/ssl/:/ssl-certs
      - "${XDG_RUNTIME_DIR:-/var/run}/docker.sock:/var/run/docker.sock"
      #- /var/run/docker.sock:/var/run/docker.sock

    networks:
      - transcendence
    restart: unless-stopped
    depends_on:
      - game
    logging:
      driver: json-file
      options:
        max-size: "1m"
        max-file: "3"

#SWAGGER
  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: swagger-ui
    networks:
      - transcendence
    environment:
      - SWAGGER_JSON=/usr/share/nginx/html/spec/swagger.yaml
      - BASE_URL=/api/docs
    restart: unless-stopped
    volumes:
      - ./api/:/usr/share/nginx/html/spec/
    logging:
      driver: json-file
      options:
        max-size: "1m"
        max-file: "3"

##CONTAINER MANAGER
  portainer:
    env_file:
      - .env
    image: portainer
    container_name: portainer
    build:
      context: ./requirements/portainer
      dockerfile: Dockerfile
      args:
      - PORTAINER_ADMIN_PASSWORD=${PORTAINER_ADMIN_PASSWORD}
    restart: unless-stopped
    volumes:
      - "${XDG_RUNTIME_DIR:-/var/run}/docker.sock:/var/run/docker.sock"
      #- /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    networks:
      - transcendence
    logging:
      driver: json-file
      options:
        max-size: "1m"
        max-file: "3"


#FRONT END SERVICES
  # production ready front-end served by nginx built with vite
  front-end:
    container_name: front-end
    build:
      context: ./requirements/front-end/
      dockerfile: Dockerfile
    networks:
      - transcendence
    logging:
      driver: json-file
      options:
        max-size: "1m"
        max-file: "3"


  # react with vite and HMR for development
  js-dev:
    container_name: js-dev
    build:
      context: ./requirements/front-end/
      dockerfile: Dockerfile.dev
    volumes:
      - ./requirements/front-end/vanilla/:/app/src # Mount the source code
    env_file:
      - .env
    networks:
      - transcendence
    logging:
      driver: json-file
      options:
        max-size: "1m"
        max-file: "3"


#BACKEND GAME SERVICES
  game:
    container_name: game
    build: 
      context: ./requirements/game/
      dockerfile: Dockerfile
    # IMPORTANT - this is insecure. Use .env file instead
    environment:
      - DATABASE_URL=postgresql://user42:password@db:5432/mydatabase # <-- use value from .env
    depends_on:
      - game-db
    env_file:
      - .env
    networks:
      - transcendence
    volumes:
      - ./requirements/traefik/config/ssl/:/etc/game/ssl/
      - ./requirements/game/:/app/
    logging:
      driver: json-file
      options:
        max-size: "1m"
        max-file: "3"


  game-db:
    container_name: game-db
    build:
      context: ./requirements/game/postgreSQL/
      dockerfile: Dockerfile
    # IMPORTANT - this is insecure. Use .env file instead
    environment:
      POSTGRES_DB: mydatabase # <-- use value from .env
      POSTGRES_USER: user42 # <-- use value from .env
      POSTGRES_PASSWORD: password # <-- use value from .env
    volumes:
      - game_db:/var/lib/postgresql/data
    networks:
      - transcendence
    logging:
      driver: json-file
      options:
        max-size: "1m"
        max-file: "3"


  user_management:
    container_name: user_management
    restart: always
    build:
      context: ./requirements/user_management/
      dockerfile: Dockerfile
    #ports:
    #  - 8000:8000
    volumes:
      - ./requirements/user_management/project:/app
    depends_on:
      - user_management_db
    env_file:
      - .env
    networks:
      - transcendence
    logging:
      driver: json-file
      options:
        max-size: "1m"
        max-file: "3"


  user_management_db:
    container_name: user_management_db
    build:
      context: ./requirements/user_management_db/
      dockerfile: Dockerfile
    restart: always
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_UNIX_SOCKET_DIRECTORIES: /var/run/postgresql
    volumes:
      - user-management-db:/var/lib/postgresql/data
    networks:
        - transcendence
    logging:
      driver: json-file
      options:
        max-size: "1m"
        max-file: "3"


  tournament:
    container_name: tournament
    build:
      context: ./requirements/tournament_service/
      dockerfile: Dockerfile
    networks:
      - transcendence
    volumes:
      - ./requirements/tournament_service/app:/app
    #ports:
    #  - 8034:8000
    logging:
      driver: json-file
      options:
        max-size: "1m"
        max-file: "3"


  tournament_db:
    container_name: tournament_db
    build:
      context: ./requirements/tournament_db/
      dockerfile: Dockerfile
    restart: always
    environment:
      POSTGRES_DB: tournament_db
      POSTGRES_USER: tournament_master
      POSTGRES_PASSWORD: 'i love miguel'
    volumes:
      - tournament-db:/var/lib/postgresql/data
    # ports:
    #   - 55432:5432
    networks:
      - transcendence
    logging:
      driver: json-file
      options:
        max-size: "1m"
        max-file: "3"


#VOLUMES
volumes:
  portainer-data:
    driver: local
  game_db:
    driver: local
  user-management-db:
    driver: local
  tournament-db:
    driver: local
  postgres-data:
    driver: local

#NETWORKS
networks:
  transcendence:
    name: transcendence
    driver: bridge
