# Generated by Django 3.1.3 on 2024-02-27 14:02

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('manage_tournament', '0003_auto_20240111_1719'),
        ('manage_tournament', '0004_auto_20240111_1734'),
        ('manage_tournament', '0007_auto_20240220_1657'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='matchsetting',
            name='nbr_of_players',
        ),
        migrations.RemoveField(
            model_name='matchsetting',
            name='nbr_of_sets',
        ),
        migrations.AddField(
            model_name='matchsetting',
            name='ball_radius',
            field=models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0.5, message='Ball radius must be at least 0.5.'), django.core.validators.MaxValueValidator(7, message='Ball radius cannot exceed 7.')]),
        ),
        migrations.AddField(
            model_name='matchsetting',
            name='paddle_height',
            field=models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(1, message='Paddle height must be at least 1.'), django.core.validators.MaxValueValidator(12, message='Paddle height cannot exceed 12.')]),
        ),
        migrations.AddField(
            model_name='matchsetting',
            name='size_of_goals',
            field=models.IntegerField(default=15, validators=[django.core.validators.MinValueValidator(15, message='Size of goal must be at least 10.'), django.core.validators.MaxValueValidator(30, message='Size of goal cannot exceed 30.')]),
        ),
        migrations.AddField(
            model_name='matchsetting',
            name='walls_factor',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, message='Walls factor must be at least 0.'), django.core.validators.MaxValueValidator(2, message='Walls factor cannot exceed 2.')]),
        ),
        migrations.AlterField(
            model_name='matchsetting',
            name='ball_speed',
            field=models.IntegerField(default=0.7, validators=[django.core.validators.MinValueValidator(0.1, message='Ball speed must be at least 0.1.'), django.core.validators.MaxValueValidator(2, message='Ball speed cannot exceed 2.')]),
        ),
        migrations.AlterField(
            model_name='matchsetting',
            name='duration_sec',
            field=models.IntegerField(default=210, validators=[django.core.validators.MinValueValidator(60, message='Duration must be at least 60 seconds.'), django.core.validators.MaxValueValidator(300, message='Duration cannot exceed 300 seconds.')]),
        ),
        migrations.AlterField(
            model_name='matchsetting',
            name='max_score',
            field=models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(1, message='Max score must be at least 1.'), django.core.validators.MaxValueValidator(10, message='Max score cannot exceed 10.')]),
        ),
        migrations.AlterField(
            model_name='matchsetting',
            name='paddle_speed',
            field=models.IntegerField(default=0.5, validators=[django.core.validators.MinValueValidator(0.1, message='Paddle speed must be at least 0.1.'), django.core.validators.MaxValueValidator(2, message='Paddle speed cannot exceed 2.')]),
        ),
        migrations.AlterField(
            model_name='tournament',
            name='nbr_of_player',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(8)]),
        ),
        migrations.AlterField(
            model_name='tournament',
            name='setting',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='manage_tournament.matchsetting'),
        ),
    ]
