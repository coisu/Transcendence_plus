we recieve a struct with all the lobby infos :
    - game mode data:
        - nbr of players;
        - nbr of rounds;
        - time limit;
    - field data :
        - size of walls (ratio wall size over goal size);
        - size of goals;
    - paddles info :
        - speed;
        - size;
    - ball infos :
        - speed;
        - radius;
    - for each player :
        - lobby ID (its position in the array of players);
        - login;
        - unique account ID;
        - color;
            
at the creation of the lobby we have to :
    - create all the objects......................................................................................[ DONE ]
    - setup the whole game data according to the lobby info.......................................................[ DONE ]
    - fill the remaining variables with default ones..............................................................[ DONE ]
    - set up each player position :
        - calculate each position according to the size of goals/walls + nbr of remaining players.................[ DONE ]
    - do the same for the walls...................................................................................[ DONE ]
    - calculate every property of the walls because they're gonna fixed for the duration of each round or game....[ DONE ]

we have to then wait for the start of the game :
    - lobby waiting loop : should have a time limit, at which the room time outs and the game is canceled
    OR one winner is determined if its in a tournament = the player who was connected wins........................[  ]
    - in the waiting loop :
        - the field is complete and displayed, according to the expected nbrOfPlayers + field dimensions..........[  ]
        - the players connected can see themselves and each other and move........................................[  ]
        - the players who are not connected yet dont appear, or appear faded......................................[  ]
        - BONUS : the ball is launched from the center like in a game ?...........................................[  ]

at the start of each round we have to :
    - calculate each position according to the size of goals/walls + nbr of remaining players;
    - calculate walls properties and paddles properties (most of those are going to be calculated at each frame because
    the paddles obviously move unlike the walls)
    - put the ball back to the center;
    - put the speeds back to default ones;

when a point gets scored :
    - if (gamemode == battleroyale)
        - nbr of players--;
        - the one who got scored on gets eliminated;
        - get rid of the eliminated player objects (player and paddle);
        - OR : switch him to spectator mode = keep the player object but delete paddle;
        - important : send info to client to delete meshes etc.
    - else
        - score++ for the player who scored (for this to work no matter the number of players,
        it is necessary to store somewhere who hit the ball last);
        - if score max reached = end of the game, the player who has the max score wins !

if there is a time limit :
    - if the limit is reached
        - if there is a draw : start overtime (normal round except the ball speeds up I guess);
        - the player who has the highest score wins;