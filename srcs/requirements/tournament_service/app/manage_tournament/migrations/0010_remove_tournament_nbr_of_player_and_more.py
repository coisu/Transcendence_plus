# Generated by Django 5.0.3 on 2024-03-16 19:22

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('manage_tournament', '0009_auto_20240312_1629'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='tournament',
            name='nbr_of_player',
        ),
        migrations.RemoveField(
            model_name='tournament',
            name='setting',
        ),
        migrations.AddField(
            model_name='matchsetting',
            name='ball_color',
            field=models.CharField(default='#000000', max_length=7, validators=[django.core.validators.RegexValidator('^#(?:[0-9a-fA-F]{3}){1,2}$', message='Invalid color format.')]),
        ),
        migrations.AddField(
            model_name='matchsetting',
            name='nbr_of_player',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(8)]),
        ),
        migrations.AddField(
            model_name='tournamentmatch',
            name='players',
            field=models.ManyToManyField(related_name='matches', to='manage_tournament.player'),
        ),
        migrations.AlterField(
            model_name='gametype',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='matchparticipants',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='matchparticipants',
            name='player_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playeridfrommatch', to='manage_tournament.player'),
        ),
        migrations.AlterField(
            model_name='matchsetting',
            name='ball_radius',
            field=models.DecimalField(decimal_places=2, default=1, max_digits=3, validators=[django.core.validators.MinValueValidator(0.5, message='Ball radius must be at least 0.5.'), django.core.validators.MaxValueValidator(7, message='Ball radius cannot exceed 7.')]),
        ),
        migrations.AlterField(
            model_name='matchsetting',
            name='ball_speed',
            field=models.DecimalField(decimal_places=2, default=0.7, max_digits=3, validators=[django.core.validators.MinValueValidator(0.1, message='Ball speed must be at least 0.1.'), django.core.validators.MaxValueValidator(2, message='Ball speed cannot exceed 2.')]),
        ),
        migrations.AlterField(
            model_name='matchsetting',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='matchsetting',
            name='paddle_speed',
            field=models.DecimalField(decimal_places=2, default=0.5, max_digits=3, validators=[django.core.validators.MinValueValidator(0.1, message='Paddle speed must be at least 0.1.'), django.core.validators.MaxValueValidator(2, message='Paddle speed cannot exceed 2.')]),
        ),
        migrations.AlterField(
            model_name='player',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='registrationtype',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='tournament',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='tournamentmatch',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='tournamentmatch',
            name='match_result',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_match', to='manage_tournament.player'),
        ),
        migrations.AlterField(
            model_name='tournamentmatch',
            name='round_number',
            field=models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='tournamentmatch',
            name='tournament_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match', to='manage_tournament.tournament'),
        ),
        migrations.AlterField(
            model_name='tournamentplayer',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='tournamentplayer',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player', to='manage_tournament.player'),
        ),
        migrations.AlterField(
            model_name='tournamentplayer',
            name='tournament_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament', to='manage_tournament.tournament'),
        ),
        migrations.AlterField(
            model_name='tournamenttype',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
    ]
