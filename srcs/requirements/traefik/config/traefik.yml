log:
  level: DEBUG

accessLog: {}

entryPoints:
  web:
    address: ":80"
  websecure:
    address: ":443"

api:
  insecure: true
  dashboard: true

certificatesResolvers:
  myresolver:
    acme:
      email: motero@student.42.fr
      storage: /ssl-certs/acme.json
      caServer: "https://acme-staging-v02.api.letsencrypt.org/directory"
      httpChallenge:
        entryPoint: web

providers:
  docker:
    endpoint: "unix:///var/run/docker.sock"
    exposedByDefault: true
  #path to this same file to act as the dynamic config
  file:
    filename: /etc/traefik/traefik.yml
    watch: true

#certficates we own and want to use
tls:
  certificates:
    - certFile: /ssl-certs/game.localhost.crt
      keyFile: /ssl-certs/game.localhost.key

## DYNAMIC CONFIGURATION
#if dynamic configuration doesnt work probably the filepath in providers is wrong
http:
  routers:
    http-catchall:
      rule: "HostRegexp(`{host:.+}`)"
      entrypoints:
        - "web"
      middlewares:
        - "redirect-to-https"
      service: noop-service #dummy service
    #websocket-router:
    #  rule: "Host(`game.localhost`)"  # Adjust the rule as needed
    #  entryPoints:
    #    - "websecure"
    #  service: websocket-service

  services:
    # Define your WebSocket service
    #websocket-service:
    #  loadBalancer:
    #    servers:
    #      - url: "game:3000" 

    noop-service:
      loadBalancer:
        servers:
          - url: "http://"
  middlewares:
    redirect-to-https:
      redirectScheme:
        scheme: "https"

